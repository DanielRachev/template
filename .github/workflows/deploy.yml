name: Build and Deploy to Production Server

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/your-template-app:latest # Replace with your image name

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the project directory on your server
            cd /home/your_user/your_project_directory  # <-- IMPORTANT: Change this path

            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/your-template-app:latest

            # Run database migrations.
            docker-compose run --rm web python manage.py migrate --noinput

            # Stop and remove the old container if it exists
            docker-compose down

            # Start the new container using docker-compose
            docker-compose up -d

            # Clean up old, unused Docker images to save space
            docker image prune -f
